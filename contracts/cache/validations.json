{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SwapContract.sol:SwapContract": {
        "src": "contracts/SwapContract.sol:13",
        "version": {
          "withMetadata": "f2e99d325b1b78434e67d6dc5903b02675974915a17f2bb67c737d5a29d14c2f",
          "withoutMetadata": "f2e99d325b1b78434e67d6dc5903b02675974915a17f2bb67c737d5a29d14c2f",
          "linkedWithoutMetadata": "f2e99d325b1b78434e67d6dc5903b02675974915a17f2bb67c737d5a29d14c2f"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setTokenContract(uint64,address)",
          "setSwapFee(uint256)",
          "getOraclePrice(uint32)",
          "getContractSpotBalance(uint64)",
          "convertOraclePrice(uint64,uint8)",
          "getSystemAddress(uint64)",
          "executeSwap(uint64,uint64,uint256,uint256,uint32,uint32)",
          "pause()",
          "unpause()",
          "withdrawFees()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapContract",
            "src": "contracts/SwapContract.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SwapContract.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SwapContract",
              "src": "contracts/SwapContract.sol:22"
            },
            {
              "label": "tokenContracts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint64,t_address)",
              "contract": "SwapContract",
              "src": "contracts/SwapContract.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_address)": {
              "label": "mapping(uint64 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerContract.sol:TriggerContract": {
        "src": "contracts/TriggerContract.sol:13",
        "version": {
          "withMetadata": "3d212a6c6af87608a8759ed4411ccfdf971dad1e3a093875b4f4e7100b99e326",
          "withoutMetadata": "3d212a6c6af87608a8759ed4411ccfdf971dad1e3a093875b4f4e7100b99e326",
          "linkedWithoutMetadata": "3d212a6c6af87608a8759ed4411ccfdf971dad1e3a093875b4f4e7100b99e326"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setTokenContract(uint64,address)",
          "setExecutionReward(uint256)",
          "getOraclePrice(uint32)",
          "getContractSpotBalance(uint64)",
          "convertOraclePrice(uint64,uint8)",
          "getSystemAddress(uint64)",
          "createTrigger(uint32,uint64,uint256,uint256,bool,uint256)",
          "startTriggerExecution(uint256)",
          "completeTriggerExecution(uint256,uint256)",
          "markExecutionFailed(uint256,string)",
          "cancelTrigger(uint256)",
          "claimRefund(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "isTriggerReady(uint256)",
          "pause()",
          "unpause()",
          "emergencyWithdraw(uint64,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerContract",
            "src": "contracts/TriggerContract.sol:105"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerContract.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerContract.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerContract",
              "src": "contracts/TriggerContract.sol:25"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerContract",
              "src": "contracts/TriggerContract.sol:26"
            },
            {
              "label": "tokenContracts",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint64,t_address)",
              "contract": "TriggerContract",
              "src": "contracts/TriggerContract.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Trigger)1448_storage)",
              "contract": "TriggerContract",
              "src": "contracts/TriggerContract.sol:53"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerContract",
              "src": "contracts/TriggerContract.sol:54"
            },
            {
              "label": "userUsdcDeposits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TriggerContract",
              "src": "contracts/TriggerContract.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ExecutionState)1422": {
              "label": "enum TriggerContract.ExecutionState",
              "members": [
                "PENDING",
                "EXECUTING",
                "COMPLETED",
                "FAILED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)1448_storage)": {
              "label": "mapping(uint256 => struct TriggerContract.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_address)": {
              "label": "mapping(uint64 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)1448_storage": {
              "label": "struct TriggerContract.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "targetOracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "usdcAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "state",
                  "type": "t_enum(ExecutionState)1422",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "executionStarted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "outputAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "c3274a543bc6218ba119608ecb95daea99ddfa19462170990ec5d1d56a3e5405",
          "withoutMetadata": "c3274a543bc6218ba119608ecb95daea99ddfa19462170990ec5d1d56a3e5405",
          "linkedWithoutMetadata": "c3274a543bc6218ba119608ecb95daea99ddfa19462170990ec5d1d56a3e5405"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setTokenContract(uint64,address)",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getContractSpotBalance(uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "startTriggerExecution(uint256)",
          "completeTriggerExecution(uint256,uint256)",
          "markExecutionFailed(uint256,string)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "claimRefund(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:131"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:26"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "tokenContracts",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint64,t_address)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:30"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Trigger)776_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:57"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:58"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ExecutionState)748": {
              "label": "enum TriggerManager.ExecutionState",
              "members": [
                "PENDING",
                "EXECUTING",
                "COMPLETED",
                "FAILED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)776_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_address)": {
              "label": "mapping(uint64 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)776_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "state",
                  "type": "t_enum(ExecutionState)748",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "executionStarted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "outputAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "c3274a543bc6218ba119608ecb95daea99ddfa19462170990ec5d1d56a3e5405",
          "withoutMetadata": "c3274a543bc6218ba119608ecb95daea99ddfa19462170990ec5d1d56a3e5405",
          "linkedWithoutMetadata": "c3274a543bc6218ba119608ecb95daea99ddfa19462170990ec5d1d56a3e5405"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setTokenContract(uint64,address)",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getContractSpotBalance(uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "startTriggerExecution(uint256)",
          "completeTriggerExecution(uint256,uint256)",
          "markExecutionFailed(uint256,string)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "claimRefund(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:131"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:26"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "tokenContracts",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint64,t_address)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:30"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Trigger)776_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:57"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:58"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ExecutionState)748": {
              "label": "enum TriggerManager.ExecutionState",
              "members": [
                "PENDING",
                "EXECUTING",
                "COMPLETED",
                "FAILED",
                "CANCELLED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)776_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_address)": {
              "label": "mapping(uint64 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)776_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "state",
                  "type": "t_enum(ExecutionState)748",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "executionStarted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "outputAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "c3b346096e0b589d1009dd0b63d81df7ecbdd30cb6e61e1a18c23c8ee7f3480d",
          "withoutMetadata": "c3b346096e0b589d1009dd0b63d81df7ecbdd30cb6e61e1a18c23c8ee7f3480d",
          "linkedWithoutMetadata": "c3b346096e0b589d1009dd0b63d81df7ecbdd30cb6e61e1a18c23c8ee7f3480d"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)775_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)775_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)775_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "f020c495ac2e94e6798948715c26987ce7c89761315f96b5dae72e33d0ec0c9f",
          "withoutMetadata": "f020c495ac2e94e6798948715c26987ce7c89761315f96b5dae72e33d0ec0c9f",
          "linkedWithoutMetadata": "f020c495ac2e94e6798948715c26987ce7c89761315f96b5dae72e33d0ec0c9f"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)775_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)775_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)775_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "a1660febbe10e952863f68796bc0b331e9c56a3ff2fdfb274540de63bd9debe7",
          "withoutMetadata": "a1660febbe10e952863f68796bc0b331e9c56a3ff2fdfb274540de63bd9debe7",
          "linkedWithoutMetadata": "a1660febbe10e952863f68796bc0b331e9c56a3ff2fdfb274540de63bd9debe7"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)775_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)775_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)775_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "fafaf5e00f7e8268a652f29715f4c6f3100495c8fe67a7a1541535132a167ca0",
          "withoutMetadata": "fafaf5e00f7e8268a652f29715f4c6f3100495c8fe67a7a1541535132a167ca0",
          "linkedWithoutMetadata": "fafaf5e00f7e8268a652f29715f4c6f3100495c8fe67a7a1541535132a167ca0"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getUserSpotBalance(address,uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndTokenName(uint32,uint64)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)775_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)775_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)775_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "b8ca22435cb15d0bb87f94e42beab192fb39309f9211d10e99074fa808105619",
          "withoutMetadata": "b8ca22435cb15d0bb87f94e42beab192fb39309f9211d10e99074fa808105619",
          "linkedWithoutMetadata": "b8ca22435cb15d0bb87f94e42beab192fb39309f9211d10e99074fa808105619"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getUserSpotBalance(address,uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndTokenName(uint32,uint64)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)775_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)775_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)775_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "d17cc0f4d52a72424207ccefbe8ae15ef67859b1b88137ac8d5607a7b5242338",
          "withoutMetadata": "d17cc0f4d52a72424207ccefbe8ae15ef67859b1b88137ac8d5607a7b5242338",
          "linkedWithoutMetadata": "d17cc0f4d52a72424207ccefbe8ae15ef67859b1b88137ac8d5607a7b5242338"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getUserSpotBalance(address,uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndTokenName(uint32,uint64)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)775_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)775_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)775_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "a567fbc8c1a09dc4ee2da1edf9f75fcc63ea75d8f490dffb676da463c4118481",
          "withoutMetadata": "a567fbc8c1a09dc4ee2da1edf9f75fcc63ea75d8f490dffb676da463c4118481",
          "linkedWithoutMetadata": "a567fbc8c1a09dc4ee2da1edf9f75fcc63ea75d8f490dffb676da463c4118481"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getUserSpotBalance(address,uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndTokenName(uint32,uint64)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)775_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)775_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)775_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/L1Read.sol:L1Read": {
        "src": "contracts/L1Read.sol:9",
        "version": {
          "withMetadata": "007f8c7210d0431915fa0252ae2be875e3e414aa110fa7e3d43dc1db8413af95",
          "withoutMetadata": "67d490194e0852ec2b3941c1fe7474b9a1823939499535dc1390437ae78cd9e3",
          "linkedWithoutMetadata": "67d490194e0852ec2b3941c1fe7474b9a1823939499535dc1390437ae78cd9e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "oraclePx(uint32)",
          "markPx(uint32)",
          "spotPx(uint32)",
          "perpAssetInfo(uint32)",
          "spotInfo(uint32)",
          "tokenInfo(uint32)",
          "position(address,uint16)",
          "spotBalance(address,uint64)",
          "userVaultEquity(address,address)",
          "withdrawable(address)",
          "delegations(address)",
          "delegatorSummary(address)",
          "l1BlockNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "74771c107546f076311c07d28b99aaeb53001933db9e19500f898214c0450089",
          "withoutMetadata": "74771c107546f076311c07d28b99aaeb53001933db9e19500f898214c0450089",
          "linkedWithoutMetadata": "74771c107546f076311c07d28b99aaeb53001933db9e19500f898214c0450089"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getUserSpotBalance(address,uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndTokenName(uint32,uint64)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)2159_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)2159_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)2159_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/mocks/MockToken.sol:MockToken": {
        "src": "contracts/mocks/MockToken.sol:11",
        "version": {
          "withMetadata": "c1b7735e5acc2542c36dfa91e83cb642aaf4617a85a41d046e1a7d41c0df2d59",
          "withoutMetadata": "1dbd974f045567391d64976be5cc596d7104dc41566b9c64bcdd8170bd10344b",
          "linkedWithoutMetadata": "1dbd974f045567391d64976be5cc596d7104dc41566b9c64bcdd8170bd10344b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8,uint256)",
          "decimals()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "faucet(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mocks/MockToken.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mocks/MockToken.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "2c792c6af2d7c94bbfbdd3bfa67f495a33208776711eb8036e192e5ecd503034",
          "withoutMetadata": "2c792c6af2d7c94bbfbdd3bfa67f495a33208776711eb8036e192e5ecd503034",
          "linkedWithoutMetadata": "2c792c6af2d7c94bbfbdd3bfa67f495a33208776711eb8036e192e5ecd503034"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getUserSpotBalance(address,uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "getTokenAddress(uint64)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndTokenName(uint32,uint64)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)775_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)775_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)775_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/L1Read.sol:L1Read": {
        "src": "contracts/L1Read.sol:9",
        "version": {
          "withMetadata": "007f8c7210d0431915fa0252ae2be875e3e414aa110fa7e3d43dc1db8413af95",
          "withoutMetadata": "67d490194e0852ec2b3941c1fe7474b9a1823939499535dc1390437ae78cd9e3",
          "linkedWithoutMetadata": "67d490194e0852ec2b3941c1fe7474b9a1823939499535dc1390437ae78cd9e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "oraclePx(uint32)",
          "markPx(uint32)",
          "spotPx(uint32)",
          "perpAssetInfo(uint32)",
          "spotInfo(uint32)",
          "tokenInfo(uint32)",
          "position(address,uint16)",
          "spotBalance(address,uint64)",
          "userVaultEquity(address,address)",
          "withdrawable(address)",
          "delegations(address)",
          "delegatorSummary(address)",
          "l1BlockNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:14",
        "version": {
          "withMetadata": "2cf48f8b2b9879fe39afe9939444c68f2a9d1b6055488aaefbd639d0967a491b",
          "withoutMetadata": "2cf48f8b2b9879fe39afe9939444c68f2a9d1b6055488aaefbd639d0967a491b",
          "linkedWithoutMetadata": "2cf48f8b2b9879fe39afe9939444c68f2a9d1b6055488aaefbd639d0967a491b"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getUserSpotBalance(address,uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint64,uint256,uint256,bool,uint256)",
          "getTokenAddress(uint64)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint64,uint256,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndTokenName(uint32,uint64)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)2159_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint256))",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint256))": {
              "label": "mapping(address => mapping(uint64 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)2159_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint256)": {
              "label": "mapping(uint64 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)2159_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/mocks/MockToken.sol:MockToken": {
        "src": "contracts/mocks/MockToken.sol:11",
        "version": {
          "withMetadata": "c1b7735e5acc2542c36dfa91e83cb642aaf4617a85a41d046e1a7d41c0df2d59",
          "withoutMetadata": "1dbd974f045567391d64976be5cc596d7104dc41566b9c64bcdd8170bd10344b",
          "linkedWithoutMetadata": "1dbd974f045567391d64976be5cc596d7104dc41566b9c64bcdd8170bd10344b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8,uint256)",
          "decimals()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "faucet(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mocks/MockToken.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mocks/MockToken.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/L1Read.sol:L1Read": {
        "src": "contracts/L1Read.sol:9",
        "version": {
          "withMetadata": "007f8c7210d0431915fa0252ae2be875e3e414aa110fa7e3d43dc1db8413af95",
          "withoutMetadata": "67d490194e0852ec2b3941c1fe7474b9a1823939499535dc1390437ae78cd9e3",
          "linkedWithoutMetadata": "67d490194e0852ec2b3941c1fe7474b9a1823939499535dc1390437ae78cd9e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "oraclePx(uint32)",
          "markPx(uint32)",
          "spotPx(uint32)",
          "perpAssetInfo(uint32)",
          "spotInfo(uint32)",
          "tokenInfo(uint32)",
          "position(address,uint16)",
          "spotBalance(address,uint64)",
          "userVaultEquity(address,address)",
          "withdrawable(address)",
          "delegations(address)",
          "delegatorSummary(address)",
          "l1BlockNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:13",
        "version": {
          "withMetadata": "1e51a01caa59c1504cd738d7551d460d9156d0d7f504641738a3637f6d445f93",
          "withoutMetadata": "1e51a01caa59c1504cd738d7551d460d9156d0d7f504641738a3637f6d445f93",
          "linkedWithoutMetadata": "1e51a01caa59c1504cd738d7551d460d9156d0d7f504641738a3637f6d445f93"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getUserSpotBalance(address,uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndTokenName(uint32,uint64)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:96"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:26"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)2156_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:50"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:51"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)2156_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)2156_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/mocks/MockToken.sol:MockToken": {
        "src": "contracts/mocks/MockToken.sol:11",
        "version": {
          "withMetadata": "c1b7735e5acc2542c36dfa91e83cb642aaf4617a85a41d046e1a7d41c0df2d59",
          "withoutMetadata": "1dbd974f045567391d64976be5cc596d7104dc41566b9c64bcdd8170bd10344b",
          "linkedWithoutMetadata": "1dbd974f045567391d64976be5cc596d7104dc41566b9c64bcdd8170bd10344b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8,uint256)",
          "decimals()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "faucet(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mocks/MockToken.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mocks/MockToken.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/L1Read.sol:L1Read": {
        "src": "contracts/L1Read.sol:9",
        "version": {
          "withMetadata": "007f8c7210d0431915fa0252ae2be875e3e414aa110fa7e3d43dc1db8413af95",
          "withoutMetadata": "67d490194e0852ec2b3941c1fe7474b9a1823939499535dc1390437ae78cd9e3",
          "linkedWithoutMetadata": "67d490194e0852ec2b3941c1fe7474b9a1823939499535dc1390437ae78cd9e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "oraclePx(uint32)",
          "markPx(uint32)",
          "spotPx(uint32)",
          "perpAssetInfo(uint32)",
          "spotInfo(uint32)",
          "tokenInfo(uint32)",
          "position(address,uint16)",
          "spotBalance(address,uint64)",
          "userVaultEquity(address,address)",
          "withdrawable(address)",
          "delegations(address)",
          "delegatorSummary(address)",
          "l1BlockNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:13",
        "version": {
          "withMetadata": "fe99cdd8a9de57baa018ab78cdc88689f3c9b503bbbfe5fa9d6d4743c55b99c9",
          "withoutMetadata": "fe99cdd8a9de57baa018ab78cdc88689f3c9b503bbbfe5fa9d6d4743c55b99c9",
          "linkedWithoutMetadata": "fe99cdd8a9de57baa018ab78cdc88689f3c9b503bbbfe5fa9d6d4743c55b99c9"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getUserSpotBalance(address,uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndTokenName(uint32,uint64)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:96"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:26"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)2156_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:50"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:51"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)2156_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)2156_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/mocks/MockToken.sol:MockToken": {
        "src": "contracts/mocks/MockToken.sol:11",
        "version": {
          "withMetadata": "c1b7735e5acc2542c36dfa91e83cb642aaf4617a85a41d046e1a7d41c0df2d59",
          "withoutMetadata": "1dbd974f045567391d64976be5cc596d7104dc41566b9c64bcdd8170bd10344b",
          "linkedWithoutMetadata": "1dbd974f045567391d64976be5cc596d7104dc41566b9c64bcdd8170bd10344b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8,uint256)",
          "decimals()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "faucet(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mocks/MockToken.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mocks/MockToken.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:13",
        "version": {
          "withMetadata": "fe99cdd8a9de57baa018ab78cdc88689f3c9b503bbbfe5fa9d6d4743c55b99c9",
          "withoutMetadata": "fe99cdd8a9de57baa018ab78cdc88689f3c9b503bbbfe5fa9d6d4743c55b99c9",
          "linkedWithoutMetadata": "fe99cdd8a9de57baa018ab78cdc88689f3c9b503bbbfe5fa9d6d4743c55b99c9"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getTokenInfo(uint64)",
          "getUserSpotBalance(address,uint64)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,uint64,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,uint64,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndTokenName(uint32,uint64)",
          "isTriggerReady(uint256)",
          "getSystemAddress(uint64)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:96"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:26"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)694_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:50"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:51"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)694_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)694_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "targetToken",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:13",
        "version": {
          "withMetadata": "f4aa6aba190d2124a485b214a07812e9a7dd82ba467fd3dad0af48b89ca83ff1",
          "withoutMetadata": "f4aa6aba190d2124a485b214a07812e9a7dd82ba467fd3dad0af48b89ca83ff1",
          "linkedWithoutMetadata": "f4aa6aba190d2124a485b214a07812e9a7dd82ba467fd3dad0af48b89ca83ff1"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getSpotAssetInfo(uint32)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,string,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,string,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndAssetName(uint32)",
          "isTriggerReady(uint256)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:96"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:27"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:28"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)691_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:51"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)691_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)691_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "spotAssetId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:13",
        "version": {
          "withMetadata": "c4b4ce91a8f98b823b09fb67a209c10fd3e49bc7f7d4c174e17b2b44833d0c94",
          "withoutMetadata": "c4b4ce91a8f98b823b09fb67a209c10fd3e49bc7f7d4c174e17b2b44833d0c94",
          "linkedWithoutMetadata": "c4b4ce91a8f98b823b09fb67a209c10fd3e49bc7f7d4c174e17b2b44833d0c94"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getSpotAssetInfo(uint32)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(uint32,string,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(uint32,string,uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getPriceAndAssetName(uint32)",
          "isTriggerReady(uint256)",
          "pause()",
          "unpause()",
          "setExecutionReward(uint256)",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:93"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:24"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:25"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)688_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:48"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:49"
            },
            {
              "label": "userDeposits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)688_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)688_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "oracleIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "spotAssetId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "maxSlippage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "isExecuted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "isCancelled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:13",
        "version": {
          "withMetadata": "ce9ee5674a603f41e18f20b779e1482cec93562f77e36bdab8c51680d6b51b42",
          "withoutMetadata": "ce9ee5674a603f41e18f20b779e1482cec93562f77e36bdab8c51680d6b51b42",
          "linkedWithoutMetadata": "ce9ee5674a603f41e18f20b779e1482cec93562f77e36bdab8c51680d6b51b42"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getSpotPrice(uint32)",
          "getSpotInfo(uint32)",
          "getTokenInfo(uint32)",
          "convertSpotPrice(uint64,uint8)",
          "createTrigger(string,string,uint32,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(string,string,uint256,uint256,uint32)",
          "cancelTrigger(uint256)",
          "emergencyWithdrawTrigger(uint256,string)",
          "getCurrentPrice(uint32)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "pause()",
          "unpause()",
          "emergencyWithdrawAdmin()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:107"
          },
          {
            "kind": "state-variable-assignment",
            "name": "executionReward",
            "src": "contracts/TriggerManager.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "executionReward",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:22"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:23"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Trigger)689_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:60"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)689_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)689_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "toToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerSpotIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "slippagePercent",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "amountOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "depositedHype",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "15"
                }
              ],
              "numberOfBytes": "512"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:13",
        "version": {
          "withMetadata": "c3eb5861443dcb1970b3d50419c88404a8504a2cf3d5460e5cb37ad3ee5d9a27",
          "withoutMetadata": "c3eb5861443dcb1970b3d50419c88404a8504a2cf3d5460e5cb37ad3ee5d9a27",
          "linkedWithoutMetadata": "c3eb5861443dcb1970b3d50419c88404a8504a2cf3d5460e5cb37ad3ee5d9a27"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getPerpAssetInfo(uint32)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(string,string,uint32,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(string,string,uint256,uint256,uint32)",
          "cancelTrigger(uint256)",
          "emergencyWithdrawTrigger(uint256,string)",
          "getCurrentPrice(uint32)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "pause()",
          "unpause()",
          "emergencyWithdrawAdmin()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:108"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Trigger)697_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:55"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)697_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)697_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "toToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerAssetIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "slippagePercent",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "amountOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "depositedHype",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "15"
                }
              ],
              "numberOfBytes": "512"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/L1Read.sol:L1Read": {
        "src": "contracts/L1Read.sol:9",
        "version": {
          "withMetadata": "007f8c7210d0431915fa0252ae2be875e3e414aa110fa7e3d43dc1db8413af95",
          "withoutMetadata": "67d490194e0852ec2b3941c1fe7474b9a1823939499535dc1390437ae78cd9e3",
          "linkedWithoutMetadata": "67d490194e0852ec2b3941c1fe7474b9a1823939499535dc1390437ae78cd9e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "oraclePx(uint32)",
          "markPx(uint32)",
          "spotPx(uint32)",
          "perpAssetInfo(uint32)",
          "spotInfo(uint32)",
          "tokenInfo(uint32)",
          "position(address,uint16)",
          "spotBalance(address,uint64)",
          "userVaultEquity(address,address)",
          "withdrawable(address)",
          "delegations(address)",
          "delegatorSummary(address)",
          "l1BlockNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:13",
        "version": {
          "withMetadata": "045c8bc4377c9acd704d2700131ff2dd44af04ed0a85b2a409ef7a30b751ec20",
          "withoutMetadata": "045c8bc4377c9acd704d2700131ff2dd44af04ed0a85b2a409ef7a30b751ec20",
          "linkedWithoutMetadata": "045c8bc4377c9acd704d2700131ff2dd44af04ed0a85b2a409ef7a30b751ec20"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getPerpAssetInfo(uint32)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(string,string,uint32,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(string,string,uint256,uint256,uint32)",
          "cancelTrigger(uint256)",
          "emergencyWithdrawTrigger(uint256,string)",
          "getCurrentPrice(uint32)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getTriggersBatch(uint256[])",
          "getUserTriggersWithDetails(address)",
          "getUserActiveTriggers(address)",
          "isTriggerConditionMet(uint256)",
          "getContractStats()",
          "calculateTriggerCost(uint256)",
          "getCompletedTriggers(address)",
          "pause()",
          "unpause()",
          "emergencyWithdrawAdmin()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:108"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Trigger)2159_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:55"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)2159_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)2159_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "toToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerAssetIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "slippagePercent",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "amountOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "depositedHype",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "15"
                }
              ],
              "numberOfBytes": "512"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/mocks/MockToken.sol:MockToken": {
        "src": "contracts/mocks/MockToken.sol:11",
        "version": {
          "withMetadata": "c1b7735e5acc2542c36dfa91e83cb642aaf4617a85a41d046e1a7d41c0df2d59",
          "withoutMetadata": "1dbd974f045567391d64976be5cc596d7104dc41566b9c64bcdd8170bd10344b",
          "linkedWithoutMetadata": "1dbd974f045567391d64976be5cc596d7104dc41566b9c64bcdd8170bd10344b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8,uint256)",
          "decimals()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "faucet(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mocks/MockToken.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mocks/MockToken.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:13",
        "version": {
          "withMetadata": "2df8fb49f52fb7433fcce5562783c3fddf5d13f2cd3115a083d009032b6c4e13",
          "withoutMetadata": "2df8fb49f52fb7433fcce5562783c3fddf5d13f2cd3115a083d009032b6c4e13",
          "linkedWithoutMetadata": "2df8fb49f52fb7433fcce5562783c3fddf5d13f2cd3115a083d009032b6c4e13"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getPerpAssetInfo(uint32)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(string,string,uint32,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(string,string,uint256,uint256,uint32)",
          "cancelTrigger(uint256)",
          "emergencyWithdrawTrigger(uint256,string)",
          "getCurrentPrice(uint32)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getTriggersBatch(uint256[])",
          "getUserTriggersWithDetails(address)",
          "getUserActiveTriggers(address)",
          "isTriggerConditionMet(uint256)",
          "getContractStats()",
          "calculateTriggerCost(uint256)",
          "getCompletedTriggers(address)",
          "pause()",
          "unpause()",
          "emergencyWithdrawAdmin()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:108"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Trigger)697_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:55"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)697_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)697_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "toToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerAssetIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "slippagePercent",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "amountOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "depositedHype",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "15"
                }
              ],
              "numberOfBytes": "512"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:13",
        "version": {
          "withMetadata": "49f876b7b313f8067bb03a0d849675edf6815ef15625e3f1cfb6d9cd2ef30b7d",
          "withoutMetadata": "49f876b7b313f8067bb03a0d849675edf6815ef15625e3f1cfb6d9cd2ef30b7d",
          "linkedWithoutMetadata": "49f876b7b313f8067bb03a0d849675edf6815ef15625e3f1cfb6d9cd2ef30b7d"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getPerpAssetInfo(uint32)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(string,string,uint32,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "executeSwap(string,string,uint256,uint256,uint32)",
          "cancelTrigger(uint256)",
          "emergencyWithdrawTrigger(uint256,string)",
          "getCurrentPrice(uint32)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getTriggersBatch(uint256[])",
          "getUserTriggersWithDetails(address)",
          "getUserActiveTriggers(address)",
          "isTriggerConditionMet(uint256)",
          "getContractStats()",
          "calculateTriggerCost(uint256)",
          "getCompletedTriggers(address)",
          "pause()",
          "unpause()",
          "emergencyWithdrawAdmin()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManager",
            "src": "contracts/TriggerManager.sol:108"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManager.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Trigger)697_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:54"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:55"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)697_storage)": {
              "label": "mapping(uint256 => struct TriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)697_storage": {
              "label": "struct TriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "toToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerAssetIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "slippagePercent",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "amountOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "depositedHype",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "15"
                }
              ],
              "numberOfBytes": "512"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManagerV2.sol:TriggerManagerV2": {
        "src": "contracts/TriggerManagerV2.sol:12",
        "version": {
          "withMetadata": "d6d0e7559f3d667972bc87917f46c10f485eddf0723998d649aa2f043d2e2f7b",
          "withoutMetadata": "d6d0e7559f3d667972bc87917f46c10f485eddf0723998d649aa2f043d2e2f7b",
          "linkedWithoutMetadata": "d6d0e7559f3d667972bc87917f46c10f485eddf0723998d649aa2f043d2e2f7b"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePrice(string,uint256)",
          "updatePrices(string[],uint256[])",
          "createTrigger(string,string,string,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256,uint256)",
          "cancelTrigger(uint256)",
          "emergencyWithdrawTrigger(uint256,string)",
          "getPrice(string)",
          "isPriceFresh(string)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "pause()",
          "unpause()",
          "emergencyWithdrawAdmin()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManagerV2",
            "src": "contracts/TriggerManagerV2.sol:84"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManagerV2.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Trigger)676_storage)",
              "contract": "TriggerManagerV2",
              "src": "contracts/TriggerManagerV2.sol:35"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManagerV2",
              "src": "contracts/TriggerManagerV2.sol:36"
            },
            {
              "label": "lastPrices",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "TriggerManagerV2",
              "src": "contracts/TriggerManagerV2.sol:37"
            },
            {
              "label": "priceUpdatedAt",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "TriggerManagerV2",
              "src": "contracts/TriggerManagerV2.sol:38"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TriggerManagerV2",
              "src": "contracts/TriggerManagerV2.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)676_storage)": {
              "label": "mapping(uint256 => struct TriggerManagerV2.Trigger)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)676_storage": {
              "label": "struct TriggerManagerV2.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "toToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "slippagePercent",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "amountOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "depositedHype",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "15"
                }
              ],
              "numberOfBytes": "512"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManagerV3.sol:TriggerManagerV3": {
        "src": "contracts/TriggerManagerV3.sol:12",
        "version": {
          "withMetadata": "8d9a8eb05c8d093b29f46961784418aff15d09788bfac1d394a5b3b68a95ec4c",
          "withoutMetadata": "8d9a8eb05c8d093b29f46961784418aff15d09788bfac1d394a5b3b68a95ec4c",
          "linkedWithoutMetadata": "8d9a8eb05c8d093b29f46961784418aff15d09788bfac1d394a5b3b68a95ec4c"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOraclePrice(uint32)",
          "getPerpAssetInfo(uint32)",
          "convertOraclePrice(uint64,uint8)",
          "createTrigger(string,string,uint32,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "cancelTrigger(uint256)",
          "emergencyWithdrawTrigger(uint256,string)",
          "getCurrentPrice(uint32)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "pause()",
          "unpause()",
          "emergencyWithdrawAdmin()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManagerV3",
            "src": "contracts/TriggerManagerV3.sol:90"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManagerV3.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Trigger)1542_storage)",
              "contract": "TriggerManagerV3",
              "src": "contracts/TriggerManagerV3.sol:46"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManagerV3",
              "src": "contracts/TriggerManagerV3.sol:47"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TriggerManagerV3",
              "src": "contracts/TriggerManagerV3.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)1542_storage)": {
              "label": "mapping(uint256 => struct TriggerManagerV3.Trigger)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)1542_storage": {
              "label": "struct TriggerManagerV3.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "toToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerAssetIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "slippagePercent",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "amountOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "depositedHype",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "15"
                }
              ],
              "numberOfBytes": "512"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManagerWithSwap.sol:TriggerManagerWithSwap": {
        "src": "contracts/TriggerManagerWithSwap.sol:12",
        "version": {
          "withMetadata": "9f98ca88d16cac6e960b194bcd91d00addf84d29554b817f6c6d2a458c0848dd",
          "withoutMetadata": "9f98ca88d16cac6e960b194bcd91d00addf84d29554b817f6c6d2a458c0848dd",
          "linkedWithoutMetadata": "9f98ca88d16cac6e960b194bcd91d00addf84d29554b817f6c6d2a458c0848dd"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createTrigger(string,string,string,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "pause()",
          "unpause()",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TriggerManagerWithSwap",
            "src": "contracts/TriggerManagerWithSwap.sol:63"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/TriggerManagerWithSwap.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Trigger)2326_storage)",
              "contract": "TriggerManagerWithSwap",
              "src": "contracts/TriggerManagerWithSwap.sol:33"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManagerWithSwap",
              "src": "contracts/TriggerManagerWithSwap.sol:34"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TriggerManagerWithSwap",
              "src": "contracts/TriggerManagerWithSwap.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)2326_storage)": {
              "label": "mapping(uint256 => struct TriggerManagerWithSwap.Trigger)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)2326_storage": {
              "label": "struct TriggerManagerWithSwap.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "toToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "slippagePercent",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "amountOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                }
              ],
              "numberOfBytes": "480"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)233_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)297_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1027_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1027_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1027_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "127e95ebf310a0fcefe8ff788f1b4cc95f07b31c110a65f480d83135bad4cb30",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/L1Read.sol:L1Read": {
        "src": "contracts/L1Read.sol:9",
        "version": {
          "withMetadata": "a35d39ffcfc9499db39cfc4152d62c91849a448d2bfcfb3e0b17100521d8416d",
          "withoutMetadata": "6eb44d91b3c05791e60c96cb27fe2e71409758cd9f54560b22dd39556e78c0c6",
          "linkedWithoutMetadata": "6eb44d91b3c05791e60c96cb27fe2e71409758cd9f54560b22dd39556e78c0c6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "oraclePx(uint32)",
          "markPx(uint32)",
          "spotPx(uint32)",
          "perpAssetInfo(uint32)",
          "spotInfo(uint32)",
          "tokenInfo(uint32)",
          "position(address,uint16)",
          "spotBalance(address,uint64)",
          "userVaultEquity(address,address)",
          "withdrawable(address)",
          "delegations(address)",
          "delegatorSummary(address)",
          "l1BlockNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SimpleTriggerManager.sol:SimpleTriggerManager": {
        "src": "contracts/SimpleTriggerManager.sol:12",
        "version": {
          "withMetadata": "e50fe6cbf78457bedbeb4df5de965df704b883c2433a4b00bb62582aff1b828f",
          "withoutMetadata": "e50fe6cbf78457bedbeb4df5de965df704b883c2433a4b00bb62582aff1b828f",
          "linkedWithoutMetadata": "e50fe6cbf78457bedbeb4df5de965df704b883c2433a4b00bb62582aff1b828f"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createTrigger(uint256,uint256,uint256,uint8,uint256,uint8,uint256,uint256)",
          "executeTrigger(uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "pause()",
          "unpause()",
          "emergencyWithdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleTriggerManager",
            "src": "contracts/SimpleTriggerManager.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/SimpleTriggerManager.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1027_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Trigger)3691_storage)",
              "contract": "SimpleTriggerManager",
              "src": "contracts/SimpleTriggerManager.sol:33"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "SimpleTriggerManager",
              "src": "contracts/SimpleTriggerManager.sol:34"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SimpleTriggerManager",
              "src": "contracts/SimpleTriggerManager.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1027_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)3691_storage)": {
              "label": "mapping(uint256 => struct SimpleTriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1027_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)3691_storage": {
              "label": "struct SimpleTriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "baseAssetIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "targetFromAssetIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "targetToAssetIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "operator",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "action",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "slippageTolerance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "status",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "14"
                }
              ],
              "numberOfBytes": "480"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/StringTriggerManager.sol:StringTriggerManager": {
        "src": "contracts/StringTriggerManager.sol:12",
        "version": {
          "withMetadata": "0c8596f2ac066c6b027f513f76676d9fe55137ce43002b9260063168aad046b5",
          "withoutMetadata": "0c8596f2ac066c6b027f513f76676d9fe55137ce43002b9260063168aad046b5",
          "linkedWithoutMetadata": "0c8596f2ac066c6b027f513f76676d9fe55137ce43002b9260063168aad046b5"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createTrigger(string,string,string,uint256,uint256,bool,uint256)",
          "executeTrigger(uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "pause()",
          "unpause()",
          "emergencyWithdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StringTriggerManager",
            "src": "contracts/StringTriggerManager.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/StringTriggerManager.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1027_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Trigger)4085_storage)",
              "contract": "StringTriggerManager",
              "src": "contracts/StringTriggerManager.sol:32"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "StringTriggerManager",
              "src": "contracts/StringTriggerManager.sol:33"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "StringTriggerManager",
              "src": "contracts/StringTriggerManager.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1027_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)4085_storage)": {
              "label": "mapping(uint256 => struct StringTriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1027_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)4085_storage": {
              "label": "struct StringTriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fromToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "toToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "triggerToken",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "fromAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isAbove",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "slippagePercent",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:29",
        "version": {
          "withMetadata": "f111f421723610543abdfa3d383a8e166f94591c03bcbc8baaafc5a27d4bb531",
          "withoutMetadata": "947bb1ea24696e88ee751386481bb54813db68bc110e0644300e483c9d2bf810",
          "linkedWithoutMetadata": "947bb1ea24696e88ee751386481bb54813db68bc110e0644300e483c9d2bf810"
        },
        "inherit": [
          "contracts/L1Read.sol:L1Read",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/libraries/TriggerTypes.sol:TriggerTypes"
        ],
        "methods": [
          "()",
          "initialize(address,uint256,uint256,uint256)",
          "createTrigger(uint32,uint32,uint32,uint8,uint256,uint8,uint256,uint256,uint256)",
          "executeTrigger(uint256)",
          "confirmExecution(uint256,uint256,bool,string)",
          "cancelTrigger(uint256)",
          "addAsset(uint32,string,address,address,uint8,uint256,uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getExecutionResult(uint256)",
          "getCurrentPrice(uint32)",
          "checkTriggerCondition(uint256)",
          "pause()",
          "unpause()",
          "updateConfig((uint256,uint256,uint256,uint256,uint256,bool))",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "triggers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(Trigger)6002_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:45"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:46"
            },
            {
              "label": "supportedAssets",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint32,t_struct(AssetInfo)6042_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:47"
            },
            {
              "label": "executionResults",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(ExecutionResult)6024_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:48"
            },
            {
              "label": "latestPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint32,t_struct(PriceData)6054_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:49"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:51"
            },
            {
              "label": "totalActiveTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "config",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(TriggerConfig)6068_storage",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)233_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)297_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_enum(ActionType)5958": {
              "label": "enum TriggerTypes.ActionType",
              "members": [
                "BUY",
                "SELL"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ComparisonOperator)5954": {
              "label": "enum TriggerTypes.ComparisonOperator",
              "members": [
                "GreaterThan",
                "LessThan",
                "GreaterThanOrEqual",
                "LessThanOrEqual"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(TriggerStatus)5965": {
              "label": "enum TriggerTypes.TriggerStatus",
              "members": [
                "ACTIVE",
                "EXECUTED",
                "CANCELLED",
                "EXPIRED",
                "FAILED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ExecutionResult)6024_storage)": {
              "label": "mapping(uint256 => struct TriggerTypes.ExecutionResult)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)6002_storage)": {
              "label": "mapping(uint256 => struct TriggerTypes.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(AssetInfo)6042_storage)": {
              "label": "mapping(uint32 => struct TriggerTypes.AssetInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(PriceData)6054_storage)": {
              "label": "mapping(uint32 => struct TriggerTypes.PriceData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AssetInfo)6042_storage": {
              "label": "struct TriggerTypes.AssetInfo",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenContract",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "systemAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "decimals",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "3"
                },
                {
                  "label": "minTradeAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "maxTradeAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ExecutionResult)6024_storage": {
              "label": "struct TriggerTypes.ExecutionResult",
              "members": [
                {
                  "label": "triggerId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "executionPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amountIn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amountOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slippageUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "executorReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "successful",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "errorMessage",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(PriceData)6054_storage": {
              "label": "struct TriggerTypes.PriceData",
              "members": [
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "assetIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "confidence",
                  "type": "t_uint8",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "source",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Trigger)6002_storage": {
              "label": "struct TriggerTypes.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "baseAssetIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "targetFromAssetIndex",
                  "type": "t_uint32",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToAssetIndex",
                  "type": "t_uint32",
                  "offset": 28,
                  "slot": "1"
                },
                {
                  "label": "operator",
                  "type": "t_enum(ComparisonOperator)5954",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "action",
                  "type": "t_enum(ActionType)5958",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "slippageTolerance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "expiration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "status",
                  "type": "t_enum(TriggerStatus)5965",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "12"
                }
              ],
              "numberOfBytes": "416"
            },
            "t_struct(TriggerConfig)6068_storage": {
              "label": "struct TriggerTypes.TriggerConfig",
              "members": [
                {
                  "label": "minExecutionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxSlippageBps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maxTriggerDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceValidityPeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "executionDelay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/libraries/TriggerTypes.sol:TriggerTypes": {
        "src": "contracts/libraries/TriggerTypes.sol:9",
        "version": {
          "withMetadata": "7db10944b25e37f8530cbbfc1227186af0821d0a21720c8f6ad86511c20ea027",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/mocks/MockToken.sol:MockToken": {
        "src": "contracts/mocks/MockToken.sol:11",
        "version": {
          "withMetadata": "fdf766fd3503f356a2143d138dea42ddff00ce2c950530551789e1c422fb525e",
          "withoutMetadata": "6d797703ca63da90a36eaa0921f99af87b6fb29249abeff4e1c2d3391066e6cb",
          "linkedWithoutMetadata": "6d797703ca63da90a36eaa0921f99af87b6fb29249abeff4e1c2d3391066e6cb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8,uint256)",
          "decimals()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "faucet(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mocks/MockToken.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mocks/MockToken.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)233_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)297_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1027_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1027_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1027_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "127e95ebf310a0fcefe8ff788f1b4cc95f07b31c110a65f480d83135bad4cb30",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/L1Read.sol:L1Read": {
        "src": "contracts/L1Read.sol:9",
        "version": {
          "withMetadata": "a35d39ffcfc9499db39cfc4152d62c91849a448d2bfcfb3e0b17100521d8416d",
          "withoutMetadata": "6eb44d91b3c05791e60c96cb27fe2e71409758cd9f54560b22dd39556e78c0c6",
          "linkedWithoutMetadata": "6eb44d91b3c05791e60c96cb27fe2e71409758cd9f54560b22dd39556e78c0c6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "oraclePx(uint32)",
          "markPx(uint32)",
          "spotPx(uint32)",
          "perpAssetInfo(uint32)",
          "spotInfo(uint32)",
          "tokenInfo(uint32)",
          "position(address,uint16)",
          "spotBalance(address,uint64)",
          "userVaultEquity(address,address)",
          "withdrawable(address)",
          "delegations(address)",
          "delegatorSummary(address)",
          "l1BlockNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/SimpleTriggerManager.sol:SimpleTriggerManager": {
        "src": "contracts/SimpleTriggerManager.sol:12",
        "version": {
          "withMetadata": "e50fe6cbf78457bedbeb4df5de965df704b883c2433a4b00bb62582aff1b828f",
          "withoutMetadata": "e50fe6cbf78457bedbeb4df5de965df704b883c2433a4b00bb62582aff1b828f",
          "linkedWithoutMetadata": "e50fe6cbf78457bedbeb4df5de965df704b883c2433a4b00bb62582aff1b828f"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createTrigger(uint256,uint256,uint256,uint8,uint256,uint8,uint256,uint256)",
          "executeTrigger(uint256)",
          "cancelTrigger(uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "pause()",
          "unpause()",
          "emergencyWithdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleTriggerManager",
            "src": "contracts/SimpleTriggerManager.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextTriggerId",
            "src": "contracts/SimpleTriggerManager.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)1027_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "triggers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Trigger)3691_storage)",
              "contract": "SimpleTriggerManager",
              "src": "contracts/SimpleTriggerManager.sol:33"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "SimpleTriggerManager",
              "src": "contracts/SimpleTriggerManager.sol:34"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SimpleTriggerManager",
              "src": "contracts/SimpleTriggerManager.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)1027_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)3691_storage)": {
              "label": "mapping(uint256 => struct SimpleTriggerManager.Trigger)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)1027_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Trigger)3691_storage": {
              "label": "struct SimpleTriggerManager.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "baseAssetIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "targetFromAssetIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "targetToAssetIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "operator",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "action",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "slippageTolerance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "status",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "14"
                }
              ],
              "numberOfBytes": "480"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/TriggerManager.sol:TriggerManager": {
        "src": "contracts/TriggerManager.sol:29",
        "version": {
          "withMetadata": "f111f421723610543abdfa3d383a8e166f94591c03bcbc8baaafc5a27d4bb531",
          "withoutMetadata": "947bb1ea24696e88ee751386481bb54813db68bc110e0644300e483c9d2bf810",
          "linkedWithoutMetadata": "947bb1ea24696e88ee751386481bb54813db68bc110e0644300e483c9d2bf810"
        },
        "inherit": [
          "contracts/L1Read.sol:L1Read",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "contracts/libraries/TriggerTypes.sol:TriggerTypes"
        ],
        "methods": [
          "()",
          "initialize(address,uint256,uint256,uint256)",
          "createTrigger(uint32,uint32,uint32,uint8,uint256,uint8,uint256,uint256,uint256)",
          "executeTrigger(uint256)",
          "confirmExecution(uint256,uint256,bool,string)",
          "cancelTrigger(uint256)",
          "addAsset(uint32,string,address,address,uint8,uint256,uint256)",
          "getTrigger(uint256)",
          "getUserTriggers(address)",
          "getExecutionResult(uint256)",
          "getCurrentPrice(uint32)",
          "checkTriggerCondition(uint256)",
          "pause()",
          "unpause()",
          "updateConfig((uint256,uint256,uint256,uint256,uint256,bool))",
          "grantExecutorRole(address)",
          "revokeExecutorRole(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "triggers",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(Trigger)5559_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:45"
            },
            {
              "label": "userTriggers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:46"
            },
            {
              "label": "supportedAssets",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint32,t_struct(AssetInfo)5599_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:47"
            },
            {
              "label": "executionResults",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(ExecutionResult)5581_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:48"
            },
            {
              "label": "latestPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint32,t_struct(PriceData)5611_storage)",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:49"
            },
            {
              "label": "nextTriggerId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:51"
            },
            {
              "label": "totalActiveTriggers",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:52"
            },
            {
              "label": "config",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(TriggerConfig)5625_storage",
              "contract": "TriggerManager",
              "src": "contracts/TriggerManager.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)233_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)297_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_enum(ActionType)5515": {
              "label": "enum TriggerTypes.ActionType",
              "members": [
                "BUY",
                "SELL"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ComparisonOperator)5511": {
              "label": "enum TriggerTypes.ComparisonOperator",
              "members": [
                "GreaterThan",
                "LessThan",
                "GreaterThanOrEqual",
                "LessThanOrEqual"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(TriggerStatus)5522": {
              "label": "enum TriggerTypes.TriggerStatus",
              "members": [
                "ACTIVE",
                "EXECUTED",
                "CANCELLED",
                "EXPIRED",
                "FAILED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ExecutionResult)5581_storage)": {
              "label": "mapping(uint256 => struct TriggerTypes.ExecutionResult)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trigger)5559_storage)": {
              "label": "mapping(uint256 => struct TriggerTypes.Trigger)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(AssetInfo)5599_storage)": {
              "label": "mapping(uint32 => struct TriggerTypes.AssetInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(PriceData)5611_storage)": {
              "label": "mapping(uint32 => struct TriggerTypes.PriceData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AssetInfo)5599_storage": {
              "label": "struct TriggerTypes.AssetInfo",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenContract",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "systemAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "decimals",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "3"
                },
                {
                  "label": "minTradeAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "maxTradeAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ExecutionResult)5581_storage": {
              "label": "struct TriggerTypes.ExecutionResult",
              "members": [
                {
                  "label": "triggerId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "executionPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amountIn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amountOut",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slippageUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "executorReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "successful",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "errorMessage",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(PriceData)5611_storage": {
              "label": "struct TriggerTypes.PriceData",
              "members": [
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "assetIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "confidence",
                  "type": "t_uint8",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "source",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Trigger)5559_storage": {
              "label": "struct TriggerTypes.Trigger",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "baseAssetIndex",
                  "type": "t_uint32",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "targetFromAssetIndex",
                  "type": "t_uint32",
                  "offset": 24,
                  "slot": "1"
                },
                {
                  "label": "targetToAssetIndex",
                  "type": "t_uint32",
                  "offset": 28,
                  "slot": "1"
                },
                {
                  "label": "operator",
                  "type": "t_enum(ComparisonOperator)5511",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "triggerPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "action",
                  "type": "t_enum(ActionType)5515",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "slippageTolerance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "expiration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "executionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "status",
                  "type": "t_enum(TriggerStatus)5522",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "executor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "12"
                }
              ],
              "numberOfBytes": "416"
            },
            "t_struct(TriggerConfig)5625_storage": {
              "label": "struct TriggerTypes.TriggerConfig",
              "members": [
                {
                  "label": "minExecutionReward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxSlippageBps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maxTriggerDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "priceValidityPeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "executionDelay",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/libraries/TriggerTypes.sol:TriggerTypes": {
        "src": "contracts/libraries/TriggerTypes.sol:9",
        "version": {
          "withMetadata": "7db10944b25e37f8530cbbfc1227186af0821d0a21720c8f6ad86511c20ea027",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/mocks/MockToken.sol:MockToken": {
        "src": "contracts/mocks/MockToken.sol:11",
        "version": {
          "withMetadata": "fdf766fd3503f356a2143d138dea42ddff00ce2c950530551789e1c422fb525e",
          "withoutMetadata": "6d797703ca63da90a36eaa0921f99af87b6fb29249abeff4e1c2d3391066e6cb",
          "linkedWithoutMetadata": "6d797703ca63da90a36eaa0921f99af87b6fb29249abeff4e1c2d3391066e6cb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint8,uint256)",
          "decimals()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "faucet(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts/mocks/MockToken.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "5",
              "type": "t_uint8",
              "contract": "MockToken",
              "src": "contracts/mocks/MockToken.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}